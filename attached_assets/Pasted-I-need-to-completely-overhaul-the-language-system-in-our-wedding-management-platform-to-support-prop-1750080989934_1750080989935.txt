I need to completely overhaul the language system in our wedding management platform to support proper multilingual functionality. Currently, language switching isn't working consistently across all pages. Here's what we need:

1. **Language Selection System**:
   - Implement a persistent language selector dropdown in the header
   - Store language preference in:
     * Cookies (for session persistence)
     * User profile (for logged-in users)
     * LocalStorage (for returning guests)
   - Default to browser language if no preference set

2. **Translation Architecture**:
   ```javascript
   // Recommended translation file structure
   locales/
     en.json
     uz.json
     ru.json
     // etc.
   
   // Example translation file
   {
     "weddingDetails": {
       "when": "When",
       "where": "Where",
       "shareTitle": "Share Our Wedding"
     },
     "rsvp": {
       "title": "Please respond",
       "namePlaceholder": "Enter your full name"
     }
   }
Implementation Requirements:

Create a language context/provider for React/Vue

Implement dynamic text replacement using translation keys

Add language detection middleware for server-side rendering

Ensure all dynamic content (dates/times) respect locale formats

UI Components Needed:

jsx
// Language selector component
function LanguageSwitcher() {
  const { t, i18n } = useTranslation();
  
  return (
    <select 
      value={i18n.language}
      onChange={(e) => i18n.changeLanguage(e.target.value)}
    >
      <option value="en">English</option>
      <option value="uz">O'zbekcha</option>
      <option value="ru">Русский</option>
    </select>
  );
}
Specific Fixes Needed:

Consistent language across all pages/components

Proper RTL (right-to-left) support for Arabic/etc.

Locale-aware date/number formatting

Dynamic form label translations

Admin Management:

Create translation management interface where:

Admins can edit all translations

See missing translations

Add new languages

Export/import translation files

Technical Implementation:

Use i18next library for React/Vue

Implement namespace-based translation loading

Add language-specific CSS when needed (for RTL)

Create middleware to inject translations into SSR

Testing Requirements:

Verify all text elements are translated

Check form validation messages

Test date/number formatting

Verify RTL layout if applicable

Check cookie/localStorage behavior

Please provide:

Complete frontend translation system implementation

Backend API endpoints for translation management

Admin interface for translation editing

Language detection middleware

Documentation for adding new languages

text

## Additional Recommendations

1. **User Experience**:
   - Add a subtle animation when language changes
   - Show loading state while translations load
   - Include language flags in selector
   - Add "help translate" option for users

2. **Technical Considerations**:
   - Implement fallback chains (uz-Latn → uz → en)
   - Add hreflang tags for SEO
   - Consider CDN caching per language
   - Implement translation versioning

3. **Future Enhancements**:
   - Browser-based translation suggestions
   - Per-user language preferences in admin
   - Automatic translation for user-generated content
   - Language-specific email templates